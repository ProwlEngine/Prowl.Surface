// Copyright © Tanner Gooding and Contributors. Licensed under the MIT License (MIT). See License.md in the repository root for more information.

// Ported from include/X11/X.h in the Xlib - C Language X Interface: X Version 11, Release 7.7
// Original source is Copyright © The Open Group

namespace TerraFX.Interop.Xlib;

public static partial class Xlib
{
    public const int X_PROTOCOL = 11;
    public const int X_PROTOCOL_REVISION = 0;
    public const nint None = 0;
    public const nint ParentRelative = 1;
    public const nint CopyFromParent = 0;
    public const nint PointerWindow = 0;
    public const nint InputFocus = 1;
    public const nint PointerRoot = 1;
    public const nint AnyPropertyType = 0;
    public const nint AnyKey = 0;
    public const nint AnyButton = 0;
    public const nint AllTemporary = 0;
    public const nint CurrentTime = 0;
    public const nint NoSymbol = 0;

    // public const nint NoEventMask = 0;
    // public const nint KeyPressMask = (1 << 0);
    // public const nint KeyReleaseMask = (1 << 1);
    // public const nint ButtonPressMask = (1 << 2);
    // public const nint ButtonReleaseMask = (1 << 3);
    // public const nint EnterWindowMask = (1 << 4);
    // public const nint LeaveWindowMask = (1 << 5);
    // public const nint PointerMotionMask = (1 << 6);
    // public const nint PointerMotionHintMask = (1 << 7);
    // public const nint Button1MotionMask = (1 << 8);
    // public const nint Button2MotionMask = (1 << 9);
    // public const nint Button3MotionMask = (1 << 10);
    // public const nint Button4MotionMask = (1 << 11);
    // public const nint Button5MotionMask = (1 << 12);
    // public const nint ButtonMotionMask = (1 << 13);
    // public const nint KeymapStateMask = (1 << 14);
    // public const nint ExposureMask = (1 << 15);
    // public const nint VisibilityChangeMask = (1 << 16);
    // public const nint StructureNotifyMask = (1 << 17);
    // public const nint ResizeRedirectMask = (1 << 18);
    // public const nint SubstructureNotifyMask = (1 << 19);
    // public const nint SubstructureRedirectMask = (1 << 20);
    // public const nint FocusChangeMask = (1 << 21);
    // public const nint PropertyChangeMask = (1 << 22);
    // public const nint ColormapChangeMask = (1 << 23);
    // public const nint OwnerGrabButtonMask = (1 << 24);

    // public const int KeyPress = 2;
    // public const int KeyRelease = 3;
    // public const int ButtonPress = 4;
    // public const int ButtonRelease = 5;
    // public const int MotionNotify = 6;
    // public const int EnterNotify = 7;
    // public const int LeaveNotify = 8;
    // public const int FocusIn = 9;
    // public const int FocusOut = 10;
    // public const int KeymapNotify = 11;
    // public const int Expose = 12;
    // public const int GraphicsExpose = 13;
    // public const int NoExpose = 14;
    // public const int VisibilityNotify = 15;
    // public const int CreateNotify = 16;
    // public const int DestroyNotify = 17;
    // public const int UnmapNotify = 18;
    // public const int MapNotify = 19;
    // public const int MapRequest = 20;
    // public const int ReparentNotify = 21;
    // public const int ConfigureNotify = 22;
    // public const int ConfigureRequest = 23;
    // public const int GravityNotify = 24;
    // public const int ResizeRequest = 25;
    // public const int CirculateNotify = 26;
    // public const int CirculateRequest = 27;
    // public const int PropertyNotify = 28;
    // public const int SelectionClear = 29;
    // public const int SelectionRequest = 30;
    // public const int SelectionNotify = 31;
    // public const int ColormapNotify = 32;
    // public const int ClientMessage = 33;
    // public const int MappingNotify = 34;
    // public const int GenericEvent = 35;
    // public const int LASTEvent = 36;


    public const int ShiftMask = (1 << 0);
    public const int LockMask = (1 << 1);
    public const int ControlMask = (1 << 2);
    public const int Mod1Mask = (1 << 3);
    public const int Mod2Mask = (1 << 4);
    public const int Mod3Mask = (1 << 5);
    public const int Mod4Mask = (1 << 6);
    public const int Mod5Mask = (1 << 7);


    public const int ShiftMapIndex = 0;
    public const int LockMapIndex = 1;
    public const int ControlMapIndex = 2;
    public const int Mod1MapIndex = 3;
    public const int Mod2MapIndex = 4;
    public const int Mod3MapIndex = 5;
    public const int Mod4MapIndex = 6;
    public const int Mod5MapIndex = 7;


    public const int Button1Mask = (1 << 8);
    public const int Button2Mask = (1 << 9);
    public const int Button3Mask = (1 << 10);
    public const int Button4Mask = (1 << 11);
    public const int Button5Mask = (1 << 12);
    public const int AnyModifier = (1 << 15);
    public const int Button1 = 1;
    public const int Button2 = 2;
    public const int Button3 = 3;
    public const int Button4 = 4;
    public const int Button5 = 5;
    public const int NotifyNormal = 0;
    public const int NotifyGrab = 1;
    public const int NotifyUngrab = 2;
    public const int NotifyWhileGrabbed = 3;
    public const int NotifyHint = 1;
    public const int NotifyAncestor = 0;
    public const int NotifyVirtual = 1;
    public const int NotifyInferior = 2;
    public const int NotifyNonlinear = 3;
    public const int NotifyNonlinearVirtual = 4;
    public const int NotifyPointer = 5;
    public const int NotifyPointerRoot = 6;
    public const int NotifyDetailNone = 7;
    public const int VisibilityUnobscured = 0;
    public const int VisibilityPartiallyObscured = 1;
    public const int VisibilityFullyObscured = 2;
    public const int PlaceOnTop = 0;
    public const int PlaceOnBottom = 1;
    public const int FamilyInternet = 0;
    public const int FamilyDECnet = 1;
    public const int FamilyChaos = 2;
    public const int FamilyInternet6 = 6;
    public const int FamilyServerInterpreted = 5;
    public const int PropertyNewValue = 0;
    public const int PropertyDelete = 1;
    public const int ColormapUninstalled = 0;
    public const int ColormapInstalled = 1;
    public const int GrabModeSync = 0;
    public const int GrabModeAsync = 1;
    public const int GrabSuccess = 0;
    public const int AlreadyGrabbed = 1;
    public const int GrabInvalidTime = 2;
    public const int GrabNotViewable = 3;
    public const int GrabFrozen = 4;
    public const int AsyncPointer = 0;
    public const int SyncPointer = 1;
    public const int ReplayPointer = 2;
    public const int AsyncKeyboard = 3;
    public const int SyncKeyboard = 4;
    public const int ReplayKeyboard = 5;
    public const int AsyncBoth = 6;
    public const int SyncBoth = 7;
    public const int RevertToNone = (int)(0);
    public const int RevertToPointerRoot = (int)(1);
    public const int RevertToParent = 2;
    public const int Success = 0;
    public const int BadRequest = 1;
    public const int BadValue = 2;
    public const int BadWindow = 3;
    public const int BadPixmap = 4;
    public const int BadAtom = 5;
    public const int BadCursor = 6;
    public const int BadFont = 7;
    public const int BadMatch = 8;
    public const int BadDrawable = 9;
    public const int BadAccess = 10;
    public const int BadAlloc = 11;
    public const int BadColor = 12;
    public const int BadGC = 13;
    public const int BadIDChoice = 14;
    public const int BadName = 15;
    public const int BadLength = 16;
    public const int BadImplementation = 17;
    public const int FirstExtensionError = 128;
    public const int LastExtensionError = 255;
    public const int InputOutput = 1;
    public const int InputOnly = 2;
    public const nint CWBackPixmap = (1 << 0);
    public const nint CWBackPixel = (1 << 1);
    public const nint CWBorderPixmap = (1 << 2);
    public const nint CWBorderPixel = (1 << 3);
    public const nint CWBitGravity = (1 << 4);
    public const nint CWWinGravity = (1 << 5);
    public const nint CWBackingStore = (1 << 6);
    public const nint CWBackingPlanes = (1 << 7);
    public const nint CWBackingPixel = (1 << 8);
    public const nint CWOverrideRedirect = (1 << 9);
    public const nint CWSaveUnder = (1 << 10);
    public const nint CWEventMask = (1 << 11);
    public const nint CWDontPropagate = (1 << 12);
    public const nint CWColormap = (1 << 13);
    public const nint CWCursor = (1 << 14);
    public const int CWX = (1 << 0);
    public const int CWY = (1 << 1);
    public const int CWWidth = (1 << 2);
    public const int CWHeight = (1 << 3);
    public const int CWBorderWidth = (1 << 4);
    public const int CWSibling = (1 << 5);
    public const int CWStackMode = (1 << 6);
    public const int ForgetGravity = 0;
    public const int NorthWestGravity = 1;
    public const int NorthGravity = 2;
    public const int NorthEastGravity = 3;
    public const int WestGravity = 4;
    public const int CenterGravity = 5;
    public const int EastGravity = 6;
    public const int SouthWestGravity = 7;
    public const int SouthGravity = 8;
    public const int SouthEastGravity = 9;
    public const int StaticGravity = 10;
    public const int UnmapGravity = 0;
    public const int NotUseful = 0;
    public const int WhenMapped = 1;
    public const int Always = 2;
    public const int IsUnmapped = 0;
    public const int IsUnviewable = 1;
    public const int IsViewable = 2;
    public const int SetModeInsert = 0;
    public const int SetModeDelete = 1;
    public const int DestroyAll = 0;
    public const int RetainPermanent = 1;
    public const int RetainTemporary = 2;
    public const int Above = 0;
    public const int Below = 1;
    public const int TopIf = 2;
    public const int BottomIf = 3;
    public const int Opposite = 4;
    public const int RaiseLowest = 0;
    public const int LowerHighest = 1;
    public const int PropModeReplace = 0;
    public const int PropModePrepend = 1;
    public const int PropModeAppend = 2;
    public const int GXclear = 0x0;
    public const int GXand = 0x1;
    public const int GXandReverse = 0x2;
    public const int GXcopy = 0x3;
    public const int GXandInverted = 0x4;
    public const int GXnoop = 0x5;
    public const int GXxor = 0x6;
    public const int GXor = 0x7;
    public const int GXnor = 0x8;
    public const int GXequiv = 0x9;
    public const int GXinvert = 0xa;
    public const int GXorReverse = 0xb;
    public const int GXcopyInverted = 0xc;
    public const int GXorInverted = 0xd;
    public const int GXnand = 0xe;
    public const int GXset = 0xf;
    public const int LineSolid = 0;
    public const int LineOnOffDash = 1;
    public const int LineDoubleDash = 2;
    public const int CapNotLast = 0;
    public const int CapButt = 1;
    public const int CapRound = 2;
    public const int CapProjecting = 3;
    public const int JoinMiter = 0;
    public const int JoinRound = 1;
    public const int JoinBevel = 2;
    public const int FillSolid = 0;
    public const int FillTiled = 1;
    public const int FillStippled = 2;
    public const int FillOpaqueStippled = 3;
    public const int EvenOddRule = 0;
    public const int WindingRule = 1;
    public const int ClipByChildren = 0;
    public const int IncludeInferiors = 1;
    public const int Unsorted = 0;
    public const int YSorted = 1;
    public const int YXSorted = 2;
    public const int YXBanded = 3;
    public const int CoordModeOrigin = 0;
    public const int CoordModePrevious = 1;
    public const int Complex = 0;
    public const int Nonconvex = 1;
    public const int Convex = 2;
    public const int ArcChord = 0;
    public const int ArcPieSlice = 1;
    public const nint GCFunction = (1 << 0);
    public const nint GCPlaneMask = (1 << 1);
    public const nint GCForeground = (1 << 2);
    public const nint GCBackground = (1 << 3);
    public const nint GCLineWidth = (1 << 4);
    public const nint GCLineStyle = (1 << 5);
    public const nint GCCapStyle = (1 << 6);
    public const nint GCJoinStyle = (1 << 7);
    public const nint GCFillStyle = (1 << 8);
    public const nint GCFillRule = (1 << 9);
    public const nint GCTile = (1 << 10);
    public const nint GCStipple = (1 << 11);
    public const nint GCTileStipXOrigin = (1 << 12);
    public const nint GCTileStipYOrigin = (1 << 13);
    public const nint GCFont = (1 << 14);
    public const nint GCSubwindowMode = (1 << 15);
    public const nint GCGraphicsExposures = (1 << 16);
    public const nint GCClipXOrigin = (1 << 17);
    public const nint GCClipYOrigin = (1 << 18);
    public const nint GCClipMask = (1 << 19);
    public const nint GCDashOffset = (1 << 20);
    public const nint GCDashList = (1 << 21);
    public const nint GCArcMode = (1 << 22);
    public const int GCLastBit = 22;
    public const int FontLeftToRight = 0;
    public const int FontRightToLeft = 1;
    public const int FontChange = 255;
    public const int XYBitmap = 0;
    public const int XYPixmap = 1;
    public const int ZPixmap = 2;
    public const int AllocNone = 0;
    public const int AllocAll = 1;
    public const int DoRed = (1 << 0);
    public const int DoGreen = (1 << 1);
    public const int DoBlue = (1 << 2);
    public const int CursorShape = 0;
    public const int TileShape = 1;
    public const int StippleShape = 2;
    public const int AutoRepeatModeOff = 0;
    public const int AutoRepeatModeOn = 1;
    public const int AutoRepeatModeDefault = 2;
    public const int LedModeOff = 0;
    public const int LedModeOn = 1;
    public const nint KBKeyClickPercent = (1 << 0);
    public const nint KBBellPercent = (1 << 1);
    public const nint KBBellPitch = (1 << 2);
    public const nint KBBellDuration = (1 << 3);
    public const nint KBLed = (1 << 4);
    public const nint KBLedMode = (1 << 5);
    public const nint KBKey = (1 << 6);
    public const nint KBAutoRepeatMode = (1 << 7);
    public const int MappingSuccess = 0;
    public const int MappingBusy = 1;
    public const int MappingFailed = 2;
    public const int MappingModifier = 0;
    public const int MappingKeyboard = 1;
    public const int MappingPointer = 2;
    public const int DontPreferBlanking = 0;
    public const int PreferBlanking = 1;
    public const int DefaultBlanking = 2;
    public const int DisableScreenSaver = 0;
    public const int DisableScreenInterval = 0;
    public const int DontAllowExposures = 0;
    public const int AllowExposures = 1;
    public const int DefaultExposures = 2;
    public const int ScreenSaverReset = 0;
    public const int ScreenSaverActive = 1;
    public const int HostInsert = 0;
    public const int HostDelete = 1;
    public const int EnableAccess = 1;
    public const int DisableAccess = 0;
    public const int StaticGray = 0;
    public const int GrayScale = 1;
    public const int StaticColor = 2;
    public const int PseudoColor = 3;
    public const int TrueColor = 4;
    public const int DirectColor = 5;
    public const int LSBFirst = 0;
    public const int MSBFirst = 1;
}
